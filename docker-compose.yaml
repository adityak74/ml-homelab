#x-common-env: &common_env
#  AWS_ENDPOINT_URL_S3: http://minio:9000
#  AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER:-minioadmin}
#  AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
#  AWS_DEFAULT_REGION: us-east-1
#  AWS_S3_FORCE_PATH_STYLE: "true"

services:

  minio:
    image: minio/minio:latest
    container_name: minio_server
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - ./data/minio:/data
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS:-app-bucket,ray-bucket}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:${MINIO_CONSOLE_PORT:-9001}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  minio-init:
    image: minio/mc:latest
    container_name: minio_init
    depends_on:
      minio:
        condition: service_healthy
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    entrypoint: >
      /bin/sh -c "
        mc alias set minio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD &&
        mc mb minio/app-bucket --ignore-existing &&
        mc mb minio/ray-bucket --ignore-existing &&
        mc anonymous set public minio/app-bucket &&
        echo 'Buckets ready âœ¨'"
    restart: "no"
